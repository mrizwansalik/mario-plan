{"version":3,"sources":["component/layout/SignedInLinks.js","store/action/authActions.js","component/layout/SignedOutLinks.js","component/layout/Navbar.js","component/dashboard/Notification.js","component/projects/Summary.js","component/projects/List.js","component/dashboard/Dashboard.js","component/projects/Detail.js","component/auth/Signin.js","component/auth/Signup.js","component/projects/Create.js","store/action/Actions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","Summary","project","title","authorFirstName","authorLastName","createdAt","calendar","List","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","Signin","email","password","handleChange","e","setState","target","value","handleSubit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","Signup","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","Create","createProject","history","push","authorId","add","Date","App","exact","path","component","Detail","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","console","log","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"uRA6BeA,cAAQ,MANI,SAACC,GAC1B,MAAO,CACLC,QAAS,kBAAMD,GCRV,SAACA,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAIzBC,OACAH,UACAI,MAAK,WACJL,EAAS,CAAEM,KAAM,8BDKVP,EAxBO,SAACQ,GACrB,OACE,wBAAIC,UAAU,SACZ,4BACE,kBAAC,IAAD,CAASC,GAAG,WAAZ,iBAEF,4BACE,uBAAGC,KAAK,IAAIC,QAASJ,EAAMN,SAA3B,YAEF,4BACE,kBAAC,IAAD,CAASQ,GAAG,IAAID,UAAU,mCACvBD,EAAMK,QAAQC,eEJVC,EATQ,WACnB,OACG,wBAAIN,UAAU,SACV,4BAAK,kBAAC,IAAD,CAASC,GAAG,UAAUD,UAAU,cAAhC,WACL,4BAAI,kBAAC,IAAD,CAASC,GAAG,UAAUD,UAAU,cAAhC,YCwBAT,eARS,SAACgB,GAEvB,MAAO,CACLX,KAAMW,EAAMC,SAASZ,KACrBQ,QAASG,EAAMC,SAASJ,WAIbb,EAzBA,SAACQ,GAAW,IACjBH,EAAkBG,EAAlBH,KAAMQ,EAAYL,EAAZK,QAERK,EAAQb,EAAKc,IAAM,kBAAC,EAAD,CAAeN,QAASA,IAAc,kBAAC,EAAD,MAC/D,OACE,yBAAKJ,UAAU,6BACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,cAAvB,aAICS,O,iBCeME,EA7BM,SAACZ,GAAW,IACxBa,EAAiBb,EAAjBa,cACL,OACI,6BACI,yBAAKZ,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,iBACA,wBAAIA,UAAU,iBACTY,GAAiBA,EAAcC,KAAI,SAAAC,GAClC,OACE,wBAAIC,IAAKD,EAAKE,IACZ,0BAAMhB,UAAU,aAAac,EAAKG,KAAlC,KACA,8BAAOH,EAAKI,SACZ,yBAAKlB,UAAU,uBACZmB,IAAOL,EAAKM,KAAKC,UAAUC,qBCD7CC,EAdC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OACE,yBAAKxB,UAAU,kCACb,yBAAKA,UAAU,wCACb,0BAAMA,UAAU,cAAcwB,EAAQC,OACtC,wCACaD,EAAQE,gBADrB,IACuCF,EAAQG,gBAE/C,uBAAG3B,UAAU,aAAamB,IAAOK,EAAQI,UAAUP,UAAUQ,eCQtDC,EAfF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACE,yBAAK/B,UAAU,wBACZ+B,GACCA,EAASlB,KAAI,SAACW,GACZ,OACE,kBAAC,IAAD,CAAMvB,GAAI,YAAcuB,EAAQR,GAAID,IAAKS,EAAQR,IAC/C,kBAAC,EAAD,CAASQ,QAASA,U,gBCH1BQ,E,uKACM,IAAD,EACmCC,KAAKlC,MAAvCgC,EADD,EACCA,SAAUnC,EADX,EACWA,KAAMgB,EADjB,EACiBA,cACxB,OAAKhB,EAAKc,IAGR,yBAAKV,UAAU,uBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAM+B,SAAUA,KAElB,yBAAK/B,UAAU,wBACb,kBAAC,EAAD,CAAcY,cAAeA,OATf,kBAAC,IAAD,CAAUX,GAAG,gB,GAHfiC,aA4BTC,cACb5C,aATsB,SAACgB,GACvB,MAAO,CACLwB,SAAUxB,EAAM6B,UAAUC,QAAQN,SAClCnC,KAAMW,EAAMC,SAASZ,KACrBgB,cAAeL,EAAM6B,UAAUC,QAAQzB,kBAMzC0B,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJhDL,CAMbH,GCKaG,cACb5C,aAXsB,SAACgB,EAAOmC,GAC9B,IAAM1B,EAAK0B,EAASC,MAAMC,OAAO5B,GAC3Be,EAAWxB,EAAM6B,UAAUS,KAAKd,SAEtC,MAAO,CACLP,QAFcO,EAAWA,EAASf,GAAM,KAGxCpB,KAAMW,EAAMC,SAASZ,SAMvB0C,2BAAiB,CAAC,CAAEC,WAAY,cAFnBJ,EAvCA,SAACpC,GAAW,IACjByB,EAAkBzB,EAAlByB,QACR,OAD0BzB,EAATH,KACRc,IACLc,EAEA,yBAAKxB,UAAU,oCACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAcwB,EAAQC,OACpC,2BAAID,EAAQN,UAEd,yBAAKlB,UAAU,wCACb,yCACawB,EAAQE,gBADrB,IACuCF,EAAQG,gBAE/C,6BAAMR,IAAOK,EAAQI,UAAUP,UAAUQ,eAO/C,yBAAK7B,UAAU,oBACb,sDArBe,kBAAC,IAAD,CAAUC,GAAG,e,QCL9B6C,E,4MACJvC,MAAQ,CACNwC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAI5BC,YAAc,SAACJ,GACbA,EAAEK,iBACF,EAAKxD,MAAMyD,OAAO,EAAKjD,Q,uDAGf,IAAD,EACqB0B,KAAKlC,MAAzB0D,EADD,EACCA,UACR,OAFO,EACY7D,KACXc,IAAY,kBAAC,IAAD,CAAUT,GAAG,MAE/B,yBAAKD,UAAU,aACb,0BAAM0D,SAAUzB,KAAKqB,YAAatD,UAAU,SAC1C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAO2D,QAAQ,SAAf,SACA,2BAAO7D,KAAK,QAAQkB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAEhD,yBAAKjD,UAAU,eACb,2BAAO2D,QAAQ,YAAf,YACA,2BAAO7D,KAAK,WAAWkB,GAAG,WAAW4C,SAAU3B,KAAKgB,gBAEtD,yBAAKjD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,UAEF,yBAAKA,UAAU,mBACZyD,EAAY,2BAAIA,GAAiB,Y,GApCzBvB,aAyDN3C,eAbS,SAACgB,GACvB,MAAO,CACLkD,UAAWlD,EAAMX,KAAK6D,UACtB7D,KAAMW,EAAMC,SAASZ,SAIE,SAACJ,GAC1B,MAAO,CACLgE,OAAQ,SAACK,GAAD,OAAWrE,GR1DAsE,EQ0DgBD,ERzD9B,SAACrE,EAAUE,EAAX,IACYC,EAD6B,EAAlBA,eAIzBC,OACAmE,2BAA2BD,EAAYf,MAAOe,EAAYd,UAC1DnD,MAAK,WACJL,EAAS,CAAEM,KAAM,qBAElBkE,OAAM,SAACC,GACNzE,EAAS,CAAEM,KAAM,cAAemE,cAXlB,IAACH,MQ8DRvE,CAA6CuD,GCzDtDoB,E,4MACJ3D,MAAQ,CACN4D,UAAW,GACXC,SAAU,GACVrB,MAAO,GACPC,SAAU,I,EAGZC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAI5BC,YAAc,SAACJ,GACbA,EAAEK,iBACF,EAAKxD,MAAMsE,OAAO,EAAK9D,Q,uDAGf,IAAD,EACqB0B,KAAKlC,MAAzBH,EADD,EACCA,KAAM6D,EADP,EACOA,UACd,OAAI7D,EAAKc,IAAY,kBAAC,IAAD,CAAUT,GAAG,MAEhC,yBAAKD,UAAU,aACb,0BAAM0D,SAAUzB,KAAKqB,YAAatD,UAAU,SAC1C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAO2D,QAAQ,aAAf,cACA,2BAAO7D,KAAK,OAAOkB,GAAG,YAAY4C,SAAU3B,KAAKgB,gBAEnD,yBAAKjD,UAAU,eACb,2BAAO2D,QAAQ,YAAf,aACA,2BAAO7D,KAAK,OAAOkB,GAAG,WAAW4C,SAAU3B,KAAKgB,gBAElD,yBAAKjD,UAAU,eACb,2BAAO2D,QAAQ,SAAf,SACA,2BAAO7D,KAAK,QAAQkB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAEhD,yBAAKjD,UAAU,eACb,2BAAO2D,QAAQ,YAAf,YACA,2BAAO7D,KAAK,WAAWkB,GAAG,WAAW4C,SAAU3B,KAAKgB,gBAEtD,yBAAKjD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,WACA,yBAAKA,UAAU,mBACZyD,EAAY,2BAAKA,GAAiB,a,GA7C5BvB,aAmEN3C,eAbS,SAACgB,GACvB,MAAO,CACLX,KAAMW,EAAMC,SAASZ,KACrB6D,UAAWlD,EAAMX,KAAK6D,cAIC,SAACjE,GAC1B,MAAO,CACL6E,OAAQ,SAACC,GAAD,OAAY9E,ETvCF,SAAC8E,GACpB,OAAO,SAAC9E,EAAUE,EAAX,GAAqD,IAA/BC,EAA8B,EAA9BA,YAAa4E,EAAiB,EAAjBA,aAClC/D,EAAWb,IACXyC,EAAYmC,IAElB/D,EAASZ,OAAO4E,+BACdF,EAAQvB,MACRuB,EAAQtB,UACRnD,MAAK,SAAA4E,GACL,OAAOrC,EAAUG,WAAW,SAASmC,IAAID,EAAKxD,KAAKP,KAAKiE,IAAI,CAC1DR,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClB/D,SAAUiE,EAAQH,UAAU,GAAKG,EAAQF,SAAS,QAEnDvE,MAAK,WACNL,EAAS,CAACM,KAAM,sBACfkE,OAAM,SAAAC,GACPzE,EAAS,CAACM,KAAM,eAAgBmE,YSsBNI,CAAOC,QAIzB/E,CAA6C2E,G,QCnEtDU,E,4MACJrE,MAAQ,CACNkB,MAAO,GACPP,QAAS,I,EAGX+B,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOpC,GAAKkC,EAAEE,OAAOC,S,EAI5BC,YAAc,SAACJ,GACbA,EAAEK,iBAEF,EAAKxD,MAAM8E,cAAc,EAAKtE,OAC9B,EAAKR,MAAM+E,QAAQC,KAAK,M,uDAMxB,OADiB9C,KAAKlC,MAAdH,KACEc,IAGR,yBAAKV,UAAU,aACb,0BAAM0D,SAAUzB,KAAKqB,YAAatD,UAAU,SAC1C,wBAAIA,UAAU,2BAAd,sBACA,yBAAKA,UAAU,eACb,2BAAO2D,QAAQ,SAAf,SACA,2BAAO7D,KAAK,OAAOkB,GAAG,QAAQ4C,SAAU3B,KAAKgB,gBAE/C,yBAAKjD,UAAU,eACb,2BAAO2D,QAAQ,WAAf,WACA,8BACE7D,KAAK,OACLkB,GAAG,UACHhB,UAAU,uBACV4D,SAAU3B,KAAKgB,gBAGnB,yBAAKjD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,aApBc,kBAAC,IAAD,CAAUC,GAAG,gB,GAtBlBiC,aA8DN3C,eAZS,SAACgB,GACvB,MAAO,CACLX,KAAMW,EAAMC,SAASZ,SAIE,SAACJ,GAC1B,MAAO,CACLqF,cAAe,SAAC9C,GAAD,OAAcvC,GC/DHgC,ED+D0BO,EC9D/C,SAACvC,EAAUE,EAAX,GAAuD,EAAhCC,YAAiC,IACvDyC,GAAYmC,EAD0C,EAAnBA,gBAEnCnE,EAAUV,IAAWc,SAASJ,QAC9B4E,EAAWtF,IAAWc,SAASZ,KAAKc,IAC1C0B,EACGG,WAAW,YACX0C,IAFH,2BAGOzD,GAHP,IAIIE,gBAAiBtB,EAAQ+D,UACzBxC,eAAgBvB,EAAQgE,SACxBY,SAAUA,EACVpD,UAAW,IAAIsD,QAEhBrF,MAAK,WACJL,EAAS,CAAEM,KAAM,iBAAkB0B,eAEpCwC,OAAM,SAACC,GACNzE,EAAS,CAAEM,KAAM,uBAAwBmE,cAlBpB,IAACzC,MDmEfjC,CAA6CqF,GEtC7CO,E,uKAjBX,OACE,kBAAC,IAAD,KACE,yBAAKnF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,IAAIC,UAAWtD,IACjC,kBAAC,IAAD,CAAOqD,KAAK,eAAeC,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWxC,IACjC,kBAAC,IAAD,CAAOuC,KAAK,UAAUC,UAAWpB,IACjC,kBAAC,IAAD,CAAOmB,KAAK,UAAUC,UAAWV,W,GAX3B1C,aCEEsD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShD,MACvB,2DClBN,IAAMiD,EAAY,CAChBnC,UAAW,MA+BEoC,EA7BK,WAAgC,IAA/BtF,EAA8B,uDAAtBqF,EAAWE,EAAW,uCACjD,OAAQA,EAAOhG,MACb,IAAK,cACH,OAAO,2BACFS,GADL,IAEEkD,UAAW,iBAEf,IAAK,gBACH,OAAO,2BACFlD,GADL,IAEEkD,UAAW,OAEf,IAAK,iBACH,OAAOlD,EACT,IAAK,iBACH,OAAO,2BACFA,GADL,IAEEkD,UAAW,OAEf,IAAK,eACH,OAAO,2BACFlD,GADL,IAEEkD,UAAWqC,EAAO7B,IAAI8B,UAE1B,QACE,OAAOxF,IC5BPqF,EAAY,CAChB7D,SAAU,CACR,CAAEf,GAAI,IAAKS,MAAO,qBAAsBP,QAAS,kBACjD,CAAEF,GAAI,IAAKS,MAAO,oBAAqBP,QAAS,kBAChD,CAAEF,GAAI,IAAKS,MAAO,sBAAuBP,QAAS,oBAiBvC8E,EAbQ,WAAgC,IAA/BzF,EAA8B,uDAAtBqF,EAAWE,EAAW,uCACpD,OAAQA,EAAOhG,MACb,IAAK,iBAEH,OADAmG,QAAQC,IAAI,iBAAkBJ,EAAOtE,SAC9BjB,EACT,IAAK,uBAEH,OADA0F,QAAQC,IAAI,uBAAwBJ,EAAO7B,KACpC1D,EACT,QACE,OAAOA,I,QCJE4F,EAPKC,YAAgB,CAClCxG,KAAMiG,EACNrE,QAASwE,EACT5D,UAAWiE,mBACX7F,SAAU8F,oB,wCCMZ9F,IAAS+F,cAXY,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjBvG,IAAS4B,YAEM5B,QAAf,ECNMwG,EAAQC,YACZd,EACAhE,YACE+E,YAAgBC,IAAMC,kBAAkB,CAAEzH,0BAAa4E,+BACvD8C,yBAAeC,GACfC,6BAAmBD,EAAU,CAAEE,wBAAwB,EAAMC,YAAY,QAASC,mBAAmB,MAIzGV,EAAMW,oBAAoB9H,MAAK,WAC7B+H,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUd,MAAOA,GACf,kBAAC,EAAD,QAGJe,SAASC,eAAe,SLsGtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtI,MAAK,SAAAuI,GACJA,EAAaC,gBAEdrE,OAAM,SAAAsE,GACLrC,QAAQqC,MAAMA,EAAMvC,iB","file":"static/js/main.cd708262.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { signOut } from \"../../store/action/authActions\";\r\n\r\nconst SignedInLinks = (props) => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Projects</NavLink>\r\n      </li>\r\n      <li>\r\n        <a href='/' onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser)=>{\r\n   return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n     const firebase = getFirebase();\r\n     const firestore = getFirestore()\r\n\r\n     firebase.auth().createUserWithEmailAndPassword(\r\n       newUser.email,\r\n       newUser.password\r\n     ).then(resp  =>{\r\n       return firestore.collection('users').doc(resp.user.uid).set({\r\n         firstName: newUser.firstName,\r\n         lastName: newUser.lastName,\r\n         initials: newUser.firstName[0] + newUser.lastName[0]\r\n       })\r\n     }).then(()=>{\r\n       dispatch({type: 'SIGNUP_SUCCESS'})\r\n     }).catch(err=>{\r\n       dispatch({type: 'SIGNUP_ERROR', err})\r\n     })\r\n   }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return ( \r\n       <ul className='right'>\r\n           <li ><NavLink to='/signup' className='text-light'>SignUp</NavLink></li>\r\n           <li><NavLink to='/signin' className='text-light'>Login</NavLink></li>\r\n       </ul>\r\n     );\r\n}\r\n \r\nexport default SignedOutLinks;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  // console.log(auth)\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          MarioPlan\r\n        </Link>\r\n\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Notification = (props) => {\r\n  const {notifications} = props\r\n    return ( \r\n        <div >\r\n            <div className='section'>\r\n              <div className='card z-depth-0'> \r\n                <div className='card-content'>\r\n                    <span className='card-title'>Notifications</span>\r\n                    <ul className='notifications'>\r\n                        {notifications && notifications.map(item=>{\r\n                          return (\r\n                            <li key={item.id}>\r\n                              <span className='pink-text'>{item.user} </span>\r\n                              <span>{item.content}</span>\r\n                              <div className='grey-text note-date'>\r\n                                {moment(item.time.toDate()).fromNow()}\r\n                              </div>\r\n                            </li>\r\n                          )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Notification;","import React from \"react\";\r\nimport moment from 'moment'\r\n\r\nconst Summary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n","import React from \"react\";\r\nimport Summary from \"./Summary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst List = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <Link to={'/project/' + project.id} key={project.id}>\r\n              <Summary project={project}  />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;","import React, { Component } from \"react\";\r\nimport Notification from \"./Notification\";\r\nimport List from \"../projects/List\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <List projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-ml\">\r\n            <Notification notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: ['createdAt', 'desc'] },\r\n    { collection: \"notifications\", limit: 3, orderBy: ['time', 'desc'] },\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from 'moment'\r\n\r\n\r\nconst Detail = (props) => {\r\n  const { project, auth } = props;\r\n  if(!auth.uid) return <Redirect to='/signin' />\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-detail\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <h2 className=\"card-title\">{project.title}</h2>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <h5>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </h5>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading projects......</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(Detail);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/action/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Signin extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from '../../store/action/authActions'\r\n\r\nclass Signup extends Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n            <div className='red-text center'>\r\n              {authError ? <p>{ authError }</p>: null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n  return {\r\n    signUp: (newUser)=> dispatch(signUp(newUser)) \r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","import React, { Component } from \"react\";\r\nimport { createProject } from \"../../store/action/Actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Create extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state)\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/')\r\n  };\r\n\r\n  render() {\r\n   \r\n    const { auth } = this.props\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea\r\n              type=\"text\"\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (projects) => dispatch(createProject(projects)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Create);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile\r\n    const authorId = getState().firebase.auth.uid\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./component/layout/Navbar\";\n// import 'App.css'\nimport Dashboard from \"./component/dashboard/Dashboard\";\nimport Detail from \"./component/projects/Detail\";\nimport Signin from \"./component/auth/Signin\";\nimport Signup from \"./component/auth/Signup\";\nimport Create from \"./component/projects/Create\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={Detail} />\n            <Route path=\"/signin\" component={Signin} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/create\" component={Create} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null,\r\n};\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      return {\r\n        ...state,\r\n        authError: \"Login failed\",\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"LOGOUT_SUCCESS\":\r\n      return state;\r\n    case 'SIGNUP_SUCCESS':\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\r\n    { id: \"2\", title: \"collect all stars\", content: \"blah blah blah\" },\r\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"create project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create project error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCdXvECsGtbt82DRigzVz6nK_tzc37hffQ\",\r\n  authDomain: \"projects-list-e4db7.firebaseapp.com\",\r\n  databaseURL: \"https://projects-list-e4db7.firebaseio.com\",\r\n  projectId: \"projects-list-e4db7\",\r\n  storageBucket: \"projects-list-e4db7.appspot.com\",\r\n  messagingSenderId: \"622059516018\",\r\n  appId: \"1:622059516018:web:4ea52be4773528f02512eb\",\r\n  measurementId: \"G-KBGPMF2WK5\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile:'users', attachAuthIsReady: true})\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}